{"version":3,"file":"static/js/310.d7818d7e.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/movieAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieBox = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 20px auto;\n`;\n\nexport const MovieInput = styled.input`\n  height: 25px;\n  font-size: medium;\n  border: 1px solid rgb(169, 153, 153);\n  border-radius: 10px 0 0 10px;\n  background-color: rgb(240, 225, 225);\n  padding: 2px 3px 2px 10px;\n`;\n\nexport const MovieSubmitBtn = styled.button`\n  font-size: medium;\n  height: 100%;\n  padding: 2px 3px;\n  border: 1px solid rgb(169, 153, 153);\n  border-radius: 0 10px 10px 0;\n  background-color: rgb(240, 225, 225);\n`;\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  font-size: 18px;\n  color: black;\n  padding: 5px;\n  &:hover {\n    color: rgb(59, 44, 44);\n    border: 1px solid rgb(169, 153, 153);\n    border-radius: 10px;\n    background-color: rgb(240, 225, 225);\n  }\n`;\n","import Container from 'components/Container/Container';\n\nimport Loader from 'components/Loader/Loader';\nimport { Notify } from 'notiflix';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { requestMovieByQuery } from 'services/movieAPI';\nimport {\n  MovieBox,\n  MovieSubmitBtn,\n  MovieList,\n  MovieLink,\n  MovieInput,\n} from './Movies.styled';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [foundMovies, setFoundMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n  const query = searchParams.get('query');\n  const searchRef = useRef();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: searchRef.current.value });\n    searchRef.current.value = '';\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    \n    async function fetchMovieByQuery(query) {\n      console.log(query);\n      try {\n        setIsLoading(true);\n\n        const data = await requestMovieByQuery(query);\n        console.log(data);\n        setFoundMovies([...data.results]);\n        if (data.results.length === 0) {\n          Notify.info('No movie found');\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovieByQuery(query);\n  }, [query]);\n\n  return (\n    <Container>\n      <MovieBox>\n        <form onSubmit={handleSubmit}>\n          <MovieInput\n            ref={searchRef}\n            type=\"text\"\n            placeholder=\"Type movie name\"\n            required\n          />\n          <MovieSubmitBtn type=\"submit\">Search</MovieSubmitBtn>\n        </form>\n      </MovieBox>\n      {isLoading && <Loader />}\n      {error !== null && <p>Oops, some error occured... Message: {error}</p>}\n      <div>\n        <MovieList>\n          {foundMovies.map(movie => (\n            <li key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </MovieLink>\n            </li>\n          ))}\n        </MovieList>\n      </div>\n    </Container>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '56e8a9f881b2c7281d6a93cec630170a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const requestTrandingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const requestMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const requestMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n"],"names":["MovieBox","styled","MovieInput","MovieSubmitBtn","MovieList","MovieLink","Link","Movies","useSearchParams","searchParams","setSearchParams","useState","foundMovies","setFoundMovies","isLoading","setIsLoading","error","setError","location","useLocation","query","get","searchRef","useRef","useEffect","console","log","requestMovieByQuery","data","results","length","Notify","message","fetchMovieByQuery","Container","onSubmit","event","preventDefault","current","value","ref","type","placeholder","required","Loader","map","movie","to","id","state","from","title","API_KEY","BASE_URL","requestTrandingMovies","axios","requestMovieDetails","movieId","requestMovieCast","requestMovieReviews"],"sourceRoot":""}