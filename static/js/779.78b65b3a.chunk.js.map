{"version":3,"file":"static/js/779.78b65b3a.chunk.js","mappings":"4SAEaA,EAAcC,EAAAA,EAAAA,GAAH,gIAQXC,EAAcD,EAAAA,EAAAA,GAAH,oJAOXE,EAAcF,EAAAA,EAAAA,EAAH,4CAIXG,EAAkBH,EAAAA,EAAAA,EAAH,oF,SCTb,SAASI,IACtB,OAA8CC,EAAAA,EAAAA,UAAS,IAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAAiCF,GAAjC,uFAEIH,GAAa,GAFjB,UAIuBM,EAAAA,EAAAA,IAAoBH,GAJ3C,OAIUI,EAJV,OAMIT,EAAmBS,EAAKC,SAN5B,gDAQIN,EAAS,KAAMO,SARnB,yBAUIT,GAAa,GAVjB,4EADc,yBAAC,SAAD,2BAedU,CAAkBP,EACnB,GAAE,CAACA,KAGF,UAACQ,EAAA,EAAD,WACGZ,IAAa,SAACa,EAAA,EAAD,IACH,OAAVX,IAAkB,iEAAyCA,MAC5D,SAACX,EAAD,UACGO,EAAgBgB,OAAS,EACxBhB,EAAgBiB,KAAI,SAAAC,GAAM,OACxB,UAACvB,EAAD,YACE,wBAAKuB,EAAOC,UACZ,uBAAID,EAAOE,WACX,UAACxB,EAAD,uBAAuBsB,EAAOG,gBAHdH,EAAOI,GADD,KAQ1B,SAACzB,EAAD,8CAKT,C,mMCtDK0B,EAAU,mCACVC,EAAW,+BAEJC,EAAqB,mCAAG,sGACZC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACsBD,IAFV,uBAC3Bb,EAD2B,EAC3BA,KAD2B,kBAI5BA,EAAKC,SAJuB,2CAAH,qDAOrBgB,EAAmB,mCAAG,WAAMrB,GAAN,yFACVoB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAlB,EADA,oBACmBiB,IAFT,uBACzBb,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,sDAOnBkB,EAAgB,mCAAG,WAAMtB,GAAN,yFACPoB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAlB,EADA,4BAC2BiB,IAFpB,uBACtBb,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBD,EAAmB,mCAAG,WAAMH,GAAN,yFACVoB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAlB,EADA,4BAC2BiB,IAFjB,uBACzBb,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,sDAOnBmB,EAAmB,mCAAG,WAAMC,GAAN,yFACVJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,YAC0BO,IAFhB,uBACzBpB,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/movieAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  padding-right: 40px;\n  gap: 20px;\n`;\n\nexport const ReviewsItem = styled.li`\n  padding: 10px;\n  border: 1px solid rgb(169, 153, 153);\n  border-radius: 10px;\n  background-color: rgb(240, 225, 225);\n`;\n\nexport const ReviewsDate = styled.p`\n  font-size: 12px;\n`;\n\nexport const ReviewsNoReview = styled.p`\n  margin: 0 auto;\n  font-size: 24px;\n  font-weight: 100;\n`;\n","import Container from 'components/Container/Container';\nimport Loader from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestMovieReviews } from 'services/movieAPI';\nimport {\n  ReviewsList,\n  ReviewsItem,\n  ReviewsDate,\n  ReviewsNoReview,\n} from './Reviews.styled';\n\nexport default function Reviews() {\n  const [searchedReviews, setSearchedReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchMovieReviews(movieId) {\n      try {\n        setIsLoading(true);\n\n        const data = await requestMovieReviews(movieId);\n\n        setSearchedReviews(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovieReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      {error !== null && <p>Oops, some error occured... Message: {error}</p>}\n      <ReviewsList>\n        {searchedReviews.length > 0 ? (\n          searchedReviews.map(review => (\n            <ReviewsItem key={review.id}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n              <ReviewsDate>Created: {review.created_at}</ReviewsDate>\n            </ReviewsItem>\n          ))\n        ) : (\n          <ReviewsNoReview> No reviews for this movie </ReviewsNoReview>\n        )}\n      </ReviewsList>\n    </Container>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '56e8a9f881b2c7281d6a93cec630170a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const requestTrandingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const requestMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const requestMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&${query}`\n  );\n  return data;\n};\n"],"names":["ReviewsList","styled","ReviewsItem","ReviewsDate","ReviewsNoReview","Reviews","useState","searchedReviews","setSearchedReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","requestMovieReviews","data","results","message","fetchMovieReviews","Container","Loader","length","map","review","author","content","created_at","id","API_KEY","BASE_URL","requestTrandingMovies","axios","requestMovieDetails","requestMovieCast","requestMovieByQuery","query"],"sourceRoot":""}