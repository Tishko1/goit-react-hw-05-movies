{"version":3,"file":"static/js/387.efd8dc8f.chunk.js","mappings":"oSAEaA,EAAWC,EAAAA,EAAAA,GAAH,iJASRC,EAAWD,EAAAA,EAAAA,GAAH,4NAWRE,EAAYF,EAAAA,EAAAA,KAAH,iEAKTG,EAAaH,EAAAA,EAAAA,EAAH,oFAMVI,EAAeJ,EAAAA,EAAAA,IAAH,gG,SCrBV,SAASK,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA8BF,GAA9B,uFAEIH,GAAa,GAFjB,UAIuBM,EAAAA,EAAAA,IAAiBH,GAJxC,OAIUI,EAJV,OAMIT,EAAgBS,EAAKC,MANzB,gDAQIN,EAAS,KAAMO,SARnB,yBAUIT,GAAa,GAVjB,4EADc,yBAAC,SAAD,2BAedU,CAAeP,EAChB,GAAE,CAACA,KAGF,gCACGJ,IAAa,SAACY,EAAA,EAAD,IACH,OAAVV,IAAkB,iEAAyCA,MAE1D,SAACZ,EAAD,UACGQ,EAAae,OAAS,EACrBf,EAAagB,KAAI,SAAAC,GAAK,OACpB,UAACvB,EAAD,YACE,0BACE,gBACEwB,IACED,EAAME,aAAN,0CACuCF,EAAME,cAD7C,gEAIFC,IAAKH,EAAMI,KACXC,OAAO,QACPC,MAAM,aAGV,UAAC1B,EAAD,YACE,wBAAKoB,EAAMO,iBACX,wCACa,SAAC7B,EAAD,UAAYsB,EAAMQ,gBAE/B,yCACc,SAAC9B,EAAD,UAAYsB,EAAMS,qBAnBrBT,EAAMU,GADD,KA0BtB,SAAC/B,EAAD,2CAMX,C,mMC1EKgC,EAAU,mCACVC,EAAW,+BAEJC,EAAqB,mCAAG,sGACZC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACsBD,IAFV,uBAC3BlB,EAD2B,EAC3BA,KAD2B,kBAI5BA,EAAKsB,SAJuB,2CAAH,qDAOrBC,EAAmB,mCAAG,WAAM3B,GAAN,yFACVyB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAvB,EADA,oBACmBsB,IAFT,uBACzBlB,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,sDAOnBD,EAAgB,mCAAG,WAAMH,GAAN,yFACPyB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAvB,EADA,4BAC2BsB,IAFpB,uBACtBlB,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBwB,EAAmB,mCAAG,WAAM5B,GAAN,yFACVyB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAvB,EADA,4BAC2BsB,IAFjB,uBACzBlB,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,sDAOnByB,EAAmB,mCAAG,WAAMC,GAAN,yFACVL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCQ,IAFtB,uBACzB1B,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/movieAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  gap: 20px;\n  justify-content: space-evenly;\n  margin: 0;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  width: 400px;\n  gap: 20px;\n  border: 1px solid rgb(169, 153, 153);\n  border-radius: 10px;\n  background-color: rgb(240, 225, 225);\n  padding: 5px;\n`;\n\nexport const CastValue = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const CastNoCast = styled.p`\n  margin: 0 auto;\n  font-size: 24px;\n  font-weight: 100;\n`;\n\nexport const CastRightBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 40px 0 20px;\n`;\n","import Loader from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestMovieCast } from 'services/movieAPI';\nimport {\n  CastList,\n  CastItem,\n  CastValue,\n  CastNoCast,\n  CastRightBox,\n} from './Cast.styled';\n\nexport default function Cast() {\n  const [searchedCast, setSearchedCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchMovieCast(movieId) {\n      try {\n        setIsLoading(true);\n\n        const data = await requestMovieCast(movieId);\n\n        setSearchedCast(data.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovieCast(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error !== null && <p>Oops, some error occured... Message: {error}</p>}\n      {\n        <CastList>\n          {searchedCast.length > 0 ? (\n            searchedCast.map(actor => (\n              <CastItem key={actor.id}>\n                <div>\n                  <img\n                    src={\n                      actor.profile_path\n                        ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                        : `https://zabavniki.club/wp-content/uploads/kino_2_11191428.jpg`\n                    }\n                    alt={actor.name}\n                    height=\"150px\"\n                    width=\"100px\"\n                  />\n                </div>\n                <CastRightBox>\n                  <h3>{actor.original_name}</h3>\n                  <p>\n                    Character: <CastValue>{actor.character}</CastValue>\n                  </p>\n                  <p>\n                    Popularity: <CastValue>{actor.popularity}</CastValue>\n                  </p>\n                </CastRightBox>\n              </CastItem>\n            ))\n          ) : (\n            <CastNoCast> No cast for this movie </CastNoCast>\n          )}\n        </CastList>\n      }\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '56e8a9f881b2c7281d6a93cec630170a';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const requestTrandingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const requestMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const requestMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n};\n"],"names":["CastList","styled","CastItem","CastValue","CastNoCast","CastRightBox","Cast","useState","searchedCast","setSearchedCast","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","requestMovieCast","data","cast","message","fetchMovieCast","Loader","length","map","actor","src","profile_path","alt","name","height","width","original_name","character","popularity","id","API_KEY","BASE_URL","requestTrandingMovies","axios","results","requestMovieDetails","requestMovieReviews","requestMovieByQuery","query"],"sourceRoot":""}